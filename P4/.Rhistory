getwd()
getwd()
list.files()
setwd("/Users/jpowell/Dropbox/Udacity/DataAnalyst/P4")
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
install.packages('ggplot2')
library(ggplot2)
names(pf)
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram() +
scale_x_discrete(breaks = 1:31)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(-dob_month, ncol = 3)
day, data = pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram() +
scale_x_discrete(breaks = 1:31) +
facet_wrap(~dob_month)
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf, xlim = c(0, 1000))
qplot(x = friend_count, data = pf) +
scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50))
names(pf)
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
subset(pf, !is.na(gender))
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
table(pf(gender))
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099D99'))
qplot(x = tenure, data = pf, binwidth = 360,
color = I('black'), fill = I('#099D99'))
qplot(x = tenure/365, data = pf, binwidth = .25,
color = I('black'), fill = I('#F79420'))
qplot(x = tenure/365, data = pf, binwidth = .25,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(limits = c(0, 7),
breaks = seq(1, 7, 1))
qplot(x = tenure/365, data = pf,
xlab = 'Number of years using Facebook',
ylab = 'Number of users in sample',
binwidth = .25,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(limits = c(0, 7),
breaks = seq(1, 7, 1))
names(pf)
qplot(x = age, data = pf,
#      xlab = 'Number of years using Facebook',
#      ylab = 'Number of users in sample',
#      binwidth = .25,
color = I('black'), fill = I('#F79420'))
#+
#  scale_x_continuous(limits = c(0, 7),
#                     breaks = seq(1, 7, 1))
qplot(x = age, data = pf,
xlab = 'Age of users using Facebook',
ylab = 'Number of users in sample',
binwidth = 10,
color = I('black'), fill = I('#F79420'))
#+
#  scale_x_continuous(limits = c(0, 7),
#                     breaks = seq(1, 7, 1))
qplot(x = age, data = pf,
xlab = 'Age of users using Facebook',
ylab = 'Number of users in sample',
binwidth = 10,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(limits = c(0, 130),
breaks = seq(1, 130, 10))
qplot(x = age, data = pf,
xlab = 'Age of users using Facebook',
ylab = 'Number of users in sample',
binwidth = 10,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(limits = c(0, 130),
breaks = seq(0, 130, 10))
qplot(x = age, data = pf,
xlab = 'Age of users using Facebook',
ylab = 'Number of users in sample',
binwidth = 1,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(limits = c(0, 130),
breaks = seq(0, 130, 10))
summary(pf)
qplot(x = age, data = pf,
xlab = 'Age of users using Facebook',
ylab = 'Number of users in sample',
binwidth = 1,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(limits = c(0, 113),
breaks = seq(0, 113, 5))
summary(pf$age)
aplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(log10(pf$friend_count +1))
summary(sqrt(pf$friend_count))
install.packages('gridExtra')
p2 = p1 + scale_y_log10()
p1 = qplot(x = friend_count, data = pf)
p2 = p1 + scale_y_log10()
p3 = p1 + scale_y_sqrt()
grid.arrange(p1, p2, p3, ncol  = 3)
library(gridExtra)
grid.arrange(p1, p2, p3, ncol  = 3)
grid.arrange(p1, p2, p3, ncol = 2)
grid.arrange(p1, p2, p3, ncol = 1)
p2 = qplot(x = log10(friend_count +1), data = pf)
p3 = qplot(x = sqrt(friend_count), data = pf)
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(aes(x = friend_count), data = pf) + geom_histogram()
p1
p2 <- p1 + scale_x_log10()
p3 <- p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol = 1)
logScale <- qplot(x = log10(friend_count), data = pf)
countScale <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 1)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10, geom = 'freqpoly') +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(400, 1000), breaks = seq(400, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(800, 1000), breaks = seq(800, 1000, 50))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Likes on the WWW',
ylab = 'Proportion of Users with that # of likes ',
binwidth = 10, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50))
summary(pf$www_likes)
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Likes on the WWW',
ylab = 'Proportion of Users with that # of likes ',
binwidth = 1, geom = 'freqpoly', color = gender) +
scale_x_continuous(lim = c(0, 100), breaks = seq(0, 100, 5))
qplot(x = www_likes, y = ..count../sum(..count..),
data = subset(pf, !is.na(gender)),
xlab = 'Likes on the WWW',
ylab = 'Proportion of Users with that # of likes ',
binwidth = 1, geom = 'freqpoly', color = gender) +
scale_x_log10()
```{r Likes on the Web}
qplot(x = www_likes,
data = subset(pf, !is.na(gender)),
#      xlab = 'Likes on the WWW',
#      ylab = 'Proportion of Users with that # of likes ',
#      binwidth = 1,
geom = 'freqpoly', color = gender) +
scale_x_continuous() +
scale_x_log10()
#  scale_x_continuous(lim = c(0, 100), breaks = seq(0, 100, 5))
```
by(pf$www_likes, pf$gender, sum)
qplot(x = friend_count, data = subset(pf, !is.na(gender)),
binwidth = 10) +
scale_x_continuous(lim = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', yylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
cord_cartes(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartes(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$friend_count, pf$gender, summary)
names(pf)
```{r Friend Requests by Gender}
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$friendships_initiated, pf$gender, summary)
```
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
#+
#  coord_cartesian(ylim = c(0, 250))
by(pf$friendships_initiated, pf$gender, summary)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$friendships_initiated, pf$gender, summary)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 150))
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in < factor(pf$mobile_check_in)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in < factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in < factor(pf$mobile_check_in)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
(pf$mobile_check_in = 1)/lenght(pf$mobile_check_in)
(pf$mobile_check_in = 1)/length(pf$mobile_check_in)
pf$mobile_check_in = 1
length(pf$mobile_check_in = 1)/length(pf$mobile_check_in)
sum(pf$mobile_check_in)/length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
